cmake_minimum_required(VERSION 3.22)
project(clox C)

option(DEBUG_TRACE_EXECUTION "Trace execution of the VM" OFF)
option(DEBUG_PRINT_CODE "Print generated bytecode" OFF)

set(gcc_like_c "$<COMPILE_LANG_AND_ID:C,ARMClang,AppleClang,Clang,GNU>")

add_executable(clox
        main.c
        common.h
        chunk.h
        chunk.c
        memutil.h
        memutil.c
        debug.h
        debug.c
        value.h
        value.c
        vm.c
        vm.h
        compiler.c
        compiler.h
        scanner.h
        scanner.c
        object.h
        object.c
        table.h
        table.c
)

target_compile_features(clox PRIVATE c_std_11)
set_target_properties(clox PROPERTIES
        C_STANDARD 11
        C_EXTENSIONS OFF
        C_STANDARD_REQUIRED ON
)

target_compile_options(clox PRIVATE
        "$<${gcc_like_c}:-Wall;-Wextra;-Werror;-pedantic>"

        "$<$<CONFIG:DEBUG>:"
        "-Og;-Wconversion;-Wno-sign-conversion;"
        "-Wno-unused-parameter;-Wno-unused-variable;-Wno-unused-function>"
)
target_compile_definitions(clox PRIVATE
        "$<$<BOOL:${DEBUG_TRACE_EXECUTION}>:DEBUG_TRACE_EXECUTION>"
        "$<$<BOOL:${DEBUG_PRINT_CODE}>:DEBUG_PRINT_CODE>"
)

target_link_libraries(clox PRIVATE m)

find_program(CCACHE_PROGRAM ccache)
if(CCACHE_PROGRAM)
    message(STATUS "Using ${CCACHE_PROGRAM} as compiler launcher")
    set_target_properties(clox PROPERTIES
            C_COMPILER_LAUNCHER "${CCACHE_PROGRAM}"
    )
endif()
